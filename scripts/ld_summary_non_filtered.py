import os
import numpy as np
import pandas as pd

def LD_summary(data, window_size = 100000):
    """ take in a LD output file and run the summarizer."""

    out_dat = []

    #c = 1
    for c in data["CHR_A"].unique():
        chr_df = data[data["CHR_A"] == c]
        chr_df = chr_df[chr_df["CHR_B"] == c]
        max_windows = int((chr_df['BP_A'].max() / window_size) + 1)

        #i = 2
        for i in range(1,max_windows+1):
            win_end = i * window_size
            win_start = win_end - (window_size - 1)

            sub_df = chr_df[chr_df['BP_A'] >= win_start]
            sub_df = sub_df[sub_df['BP_A'] < win_end]

            if len(sub_df) > 0:
                summ_dat = {'chromosome' : sub_df['CHR_A'].values[0],
                            'win_start' : win_start, 
                            'win_end' : win_end,
                            'n_loci' : len(sub_df['SNP_A'].unique()),
                            'n_comparisons' : len(sub_df), 
                            'mean_r2' : sub_df['R2'].mean(), 
                            'median_r2' : sub_df['R2'].median(), 
                            'max_r2' : sub_df['R2'].max(), 
                            'min_r2' : sub_df['R2'].min(), 
                            }
            else:
                summ_dat = {'chromosome' : data['CHR_A'].values[0],
                            'win_start' : win_start, 
                            'win_end' : win_end,
                            'n_loci' : np.nan,
                            'n_comparisons' : np.nan, 
                            'mean_r2' : np.nan, 
                            'median_r2' : np.nan, 
                            'max_r2' : np.nan, 
                            'min_r2' : np.nan, 
                            }
            out_dat.append(summ_dat)

    return pd.DataFrame(out_dat)


if __name__ == '__main__':


    filepath = "../data/raw/LD_files/"
    infiles = [filepath+x for x in os.listdir(filepath) if x[-3:] == ".ld"]

    infiles = [x for x in infiles if "noLDfilter_" in x]

    files = {k : v for k, v in zip(["full", "Labrador", "Newfoundland", "STLawrence"], 
                                        infiles)}

    all_ld_summaries = []

    #c = 'full'
    #f = infiles[0]
    for c, f in files.items():

        print(f"on cluster: {c}")

        data = pd.read_csv(f, delim_whitespace=True)
        print("using 1 mb windows")
        ld_df = LD_summary(data, window_size = 1000000)

        ld_df['cluster'] = c

        all_ld_summaries.append(ld_df)

    out_df = pd.concat(all_ld_summaries)

    out_df.to_csv(filepath+"noLDfilter_ld_summary_output.tsv", index=False, sep = '\t')

